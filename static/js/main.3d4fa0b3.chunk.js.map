{"version":3,"sources":["images/big_cloud.png","images/cloud-mist.png","images/moon.png","images/Rocket_launch.png","images/satalite.png","images/avataaars.png","images/earth.png","App.js","serviceWorker.js","index.js"],"names":["module","exports","App","ref","parallax","pages","offset","speed","style","pointerEvents","src","require","width","marginLeft","backgroundColor","factor","backgroundSize","className","id","opacity","display","marginRight","alignItems","justifyContent","Grid","container","spacing","direction","justify","minHeight","item","xs","alt","IconButton","onClick","window","open","fontSize","color","scrollTo","textAlign","React","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,uC,gGCA3CD,EAAOC,QAAU,IAA0B,wC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,2C,mBCA3CD,EAAOC,QAAU,IAA0B,sC,mBCA3CD,EAAOC,QAAU,IAA0B,uC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,4LCmK5BC,E,iLArJH,IAAD,OACP,OACE,kBAAC,WAAD,CAAUC,IAAK,SAAAA,GAAG,OAAK,EAAKC,SAAWD,GAAME,MAAO,GAC1C,kBAAC,gBAAD,CAAeC,OAAQ,GAAKC,OAAQ,GAAKC,MAAO,CAAEC,cAAe,SACvE,yBAAKC,IAAKC,EAAQ,IAAsBH,MAAO,CAAEI,MAAO,MAAOC,WAAY,UAE7E,kBAAC,gBAAD,CAAeP,OAAQ,EAAGC,MAAO,EAAGC,MAAO,CAAEM,gBAAiB,aAC9D,kBAAC,gBAAD,CAAeR,OAAQ,EAAGC,MAAO,EAAGC,MAAO,CAAEM,gBAAiB,aAC9D,kBAAC,gBAAD,CAAeR,OAAQ,EAAGC,MAAO,EAAGQ,OAAQ,EAAGP,MAAO,CAAEQ,eAAgB,UACtE,yBAAKC,UAAU,YACb,yBAAKC,GAAG,WAER,yBAAKA,GAAG,WACR,yBAAKD,UAAU,WACf,yBAAKC,GAAG,cAOZ,kBAAC,gBAAD,CAAeZ,OAAQ,GAAKC,OAAQ,GAAKC,MAAO,CAAEC,cAAe,SAC/D,yBAAKC,IAAKC,EAAQ,IAA+BH,MAAO,CAAEI,MAAO,MAAOC,WAAY,UAGtF,kBAAC,gBAAD,CAAeP,OAAQ,IAAKC,OAAQ,GAAKC,MAAO,CAAEC,cAAe,SAC/D,yBAAKC,IAAKC,EAAQ,IAA0BH,MAAO,CAAEI,MAAO,MAAOC,WAAY,UAKjF,kBAAC,gBAAD,CAAeP,OAAQ,EAAGC,MAAO,GAAKC,MAAO,CAAEW,QAAS,KACtD,yBAAKT,IAAKC,EAAQ,GAA4BH,MAAO,CAAEY,QAAS,QAASR,MAAO,MAAOS,YAAa,SACpG,yBAAKX,IAAKC,EAAQ,IAA2BH,MAAO,CAAEY,QAAS,QAASR,MAAO,MAAOC,WAAY,SAClG,yBAAKH,IAAKC,EAAQ,GAA4BH,MAAO,CAAEY,QAAS,QAASR,MAAO,MAAOC,WAAY,SACnG,yBAAKH,IAAKC,EAAQ,IAA2BH,MAAO,CAAEY,QAAS,QAASR,MAAO,MAAOS,YAAa,UAIrG,kBAAC,gBAAD,CAAef,OAAQ,KAAMC,MAAO,GAAKC,MAAO,CAAEW,QAAS,KACzD,yBAAKT,IAAKC,EAAQ,GAA4BH,MAAO,CAAEY,QAAS,QAASR,MAAO,MAAOC,WAAY,QACnG,yBAAKH,IAAKC,EAAQ,IAA2BH,MAAO,CAAEY,QAAS,QAASR,MAAO,MAAOC,WAAY,SAClG,yBAAKH,IAAKC,EAAQ,GAA4BH,MAAO,CAAEY,QAAS,QAASR,MAAO,KAAMC,WAAY,SAClG,yBAAKH,IAAKC,EAAQ,GAA4BH,MAAO,CAAEY,QAAS,QAASR,MAAO,MAAOC,WAAY,UAGrG,kBAAC,gBAAD,CAAeP,OAAQ,EAAGC,MAAO,GAAKC,MAAO,CAAEW,QAAS,KACtD,yBAAKT,IAAKC,EAAQ,IAA2BH,MAAO,CAAEY,QAAS,QAASR,MAAO,MAAOC,WAAY,SAClG,yBAAKH,IAAKC,EAAQ,GAA4BH,MAAO,CAAEY,QAAS,QAASR,MAAO,MAAOC,WAAY,UAIrG,kBAAC,gBAAD,CAAeP,OAAQ,IAAKC,OAAQ,GAAKC,MAAO,CAAEW,QAAS,KACzD,yBAAKT,IAAKC,EAAQ,GAA4BH,MAAO,CAAEY,QAAS,QAASR,MAAO,MAAOC,WAAY,SACnG,yBAAKH,IAAKC,EAAQ,GAA4BH,MAAO,CAAEY,QAAS,QAASR,MAAO,MAAOC,WAAY,UAGrG,kBAAC,gBAAD,CAAeP,OAAQ,IAAKC,MAAO,GAAKC,MAAO,CAAEW,QAAS,KACxD,yBAAKT,IAAKC,EAAQ,GAA4BH,MAAO,CAAEY,QAAS,QAASR,MAAO,MAAOC,WAAY,QACnG,yBAAKH,IAAKC,EAAQ,GAA4BH,MAAO,CAAEY,QAAS,QAASR,MAAO,MAAOC,WAAY,SACnG,yBAAKH,IAAKC,EAAQ,IAA2BH,MAAO,CAAEY,QAAS,QAASR,MAAO,MAAOC,WAAY,UAKpG,kBAAC,gBAAD,CACEP,OAAQ,EACRC,MAAO,GACPC,MAAO,CAAEY,QAAS,OAAQE,WAAY,SAAUC,eAAgB,WAChE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EACbC,QAAS,EACTC,UAAU,SACVL,WAAW,SACXM,QAAQ,SACRpB,MAAO,CAAEqB,UAAW,UACpB,kBAACL,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,IACb,yBAAKrB,IAAKC,EAAQ,IAA2BqB,IAAI,QAAQxB,MAAO,CAAEI,MAAO,MAAOC,WAAY,UAE9F,kBAACW,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,IACb,yBAAKd,UAAU,aAAf,gBAEF,kBAACO,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GACb,kBAACE,EAAA,EAAD,CAAYC,QAAS,WAAQC,OAAOC,KAAK,6CACvC,kBAAC,IAAD,CAAc5B,MAAO,CAAE6B,SAAU,GAAIC,MAAO,cAE9C,kBAACL,EAAA,EAAD,CAAYC,QAAS,WAAQC,OAAOC,KAAK,mCACvC,kBAAC,IAAD,CAAY5B,MAAO,CAAE6B,SAAU,GAAIC,MAAO,iBAMlD,kBAAC,gBAAD,CACEhC,OAAQ,EACRC,MAAO,GACP2B,QAAS,kBAAM,EAAK9B,SAASmC,SAAS,IACtC/B,MAAO,CAAEY,QAAS,OAAQE,WAAY,SAAUC,eAAgB,WAChE,6BACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,IACb,wBAAId,UAAU,YAAYT,MAAO,CAAEgC,UAAW,WAA9C,aAEF,kBAAChB,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GACb,uBAAGd,UAAU,cAAcT,MAAO,CAAEgC,UAAW,WAA/C,qlBAOF,kBAAChB,EAAA,EAAD,CAAMM,MAAI,EAACC,GAAI,GAEb,uBAAId,UAAU,cAAcT,MAAO,CAAEgC,UAAW,WAAhD,wlBAWR,kBAAC,gBAAD,CACElC,OAAQ,EACRC,OAAQ,GACRC,MAAO,CACLY,QAAS,OAAQE,WAAY,SAAUC,eAAgB,WAGzD,wBAAIN,UAAU,aAAd,iBAGF,kBAAC,gBAAD,CAAeX,OAAQ,IAAKC,OAAQ,GAAKC,MAAO,CAAEY,QAAS,OAAQE,WAAY,SAAUC,eAAgB,SAAUd,cAAe,SAChI,yBAAKC,IAAKC,EAAQ,IAAuBH,MAAO,CAAEI,MAAO,UAG3D,kBAAC,gBAAD,CACEN,OAAQ,EACRC,OAAQ,EACRC,MAAO,CAAEY,QAAS,OAAQE,WAAY,SAAUC,eAAgB,UAChEW,QAAS,kBAAM,EAAK9B,SAASmC,SAAS,W,GA9I9BE,IAAMC,WCDJC,QACW,cAA7BR,OAAOS,SAASC,UAEe,UAA7BV,OAAOS,SAASC,UAEhBV,OAAOS,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.3d4fa0b3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/big_cloud.8e162924.png\";","module.exports = __webpack_public_path__ + \"static/media/cloud-mist.e3db4f73.png\";","module.exports = __webpack_public_path__ + \"static/media/moon.c84a923b.png\";","module.exports = __webpack_public_path__ + \"static/media/Rocket_launch.5206ed18.png\";","module.exports = __webpack_public_path__ + \"static/media/satalite.6724750e.png\";","module.exports = __webpack_public_path__ + \"static/media/avataaars.356f2fa5.png\";","module.exports = __webpack_public_path__ + \"static/media/earth.5e914d70.png\";","import React from 'react';\nimport './App.scss';\nimport ReactDOM from 'react-dom';\nimport { Parallax, ParallaxLayer } from 'react-spring/renderprops-addons';\nimport Grid from '@material-ui/core/Grid';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Parallax ref={ref => (this.parallax = ref)} pages={3}>\n                <ParallaxLayer offset={0.1} speed={-0.2} style={{ pointerEvents: 'none' }}>\n          <img src={require('./images/moon.png')} style={{ width: '20%', marginLeft: '80%'  }} />\n        </ParallaxLayer>\n        <ParallaxLayer offset={1} speed={1} style={{ backgroundColor: '#782F30' }} />\n        <ParallaxLayer offset={2} speed={1} style={{ backgroundColor: '#87CDDE' }} />\n        <ParallaxLayer offset={0} speed={0} factor={3} style={{ backgroundSize: 'cover' }} >\n          <div className=\"parallax\">\n            <div id=\"stars1\">\n            </div>\n            <div id=\"stars2\"></div>\n            <div className=\"pulsate\">\n            <div id=\"stars3\">\n            </div>\n            </div>\n          </div>\n        </ParallaxLayer>\n\n        \n        <ParallaxLayer offset={0.3} speed={-0.2} style={{ pointerEvents: 'none' }}>\n          <img src={require('./images/Rocket_launch.png')} style={{ width: '10%', marginLeft: '15%'  }} />\n        </ParallaxLayer>\n\n        <ParallaxLayer offset={1.3} speed={-0.3} style={{ pointerEvents: 'none' }}>\n          <img src={require('./images/satalite.png')} style={{ width: '12%', marginLeft: '70%' }} />\n        </ParallaxLayer>\n\n\n\n        <ParallaxLayer offset={1} speed={0.8} style={{ opacity: 0.5 }}>\n          <img src={require('./images/cloud-mist.png')} style={{ display: 'block', width: '30%', marginRight: '65%' }} />\n          <img src={require('./images/big_cloud.png')} style={{ display: 'block', width: '20%', marginLeft: '55%' }} />\n          <img src={require('./images/cloud-mist.png')} style={{ display: 'block', width: '10%', marginLeft: '15%' }} />\n          <img src={require('./images/big_cloud.png')} style={{ display: 'block', width: '10%', marginRight: '15%' }} />\n        </ParallaxLayer>\n\n\n        <ParallaxLayer offset={1.75} speed={0.5} style={{ opacity: 0.1 }}>\n          <img src={require('./images/cloud-mist.png')} style={{ display: 'block', width: '20%', marginLeft: '75' }} />\n          <img src={require('./images/big_cloud.png')} style={{ display: 'block', width: '20%', marginLeft: '80%' }} />\n          <img src={require('./images/cloud-mist.png')} style={{ display: 'block', width: '5%', marginLeft: '25%' }} />\n          <img src={require('./images/cloud-mist.png')} style={{ display: 'block', width: '20%', marginLeft: '15%' }} />\n        </ParallaxLayer>\n\n        <ParallaxLayer offset={1} speed={0.5} style={{ opacity: 0.1 }}>\n          <img src={require('./images/big_cloud.png')} style={{ display: 'block', width: '20%', marginLeft: '70%' }} />\n          <img src={require('./images/cloud-mist.png')} style={{ display: 'block', width: '20%', marginLeft: '40%' }} />\n        </ParallaxLayer>\n\n\n        <ParallaxLayer offset={1.6} speed={-0.1} style={{ opacity: 0.4 }}>\n          <img src={require('./images/cloud-mist.png')} style={{ display: 'block', width: '20%', marginLeft: '60%' }} />\n          <img src={require('./images/cloud-mist.png')} style={{ display: 'block', width: '10%', marginLeft: '85%' }} />\n        </ParallaxLayer>\n\n        <ParallaxLayer offset={2.6} speed={0.4} style={{ opacity: 0.6 }}>\n          <img src={require('./images/cloud-mist.png')} style={{ display: 'block', width: '20%', marginLeft: '5%' }} />\n          <img src={require('./images/cloud-mist.png')} style={{ display: 'block', width: '10%', marginLeft: '75%' }} />\n          <img src={require('./images/big_cloud.png')} style={{ display: 'block', width: '10%', marginLeft: '50%' }} />\n        </ParallaxLayer>\n\n\n\n        <ParallaxLayer\n          offset={0}\n          speed={0.1}\n          style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <Grid container\n            spacing={0}\n            direction=\"column\"\n            alignItems=\"center\"\n            justify=\"center\"\n            style={{ minHeight: '100vh' }}>\n            <Grid item xs={12} >\n              <img src={require('./images/avataaars.png')} alt=\"empty\" style={{ width: '50%', marginLeft: \"25%\" }} />\n            </Grid>\n            <Grid item xs={12}>\n              <div className=\"AlexTitle\">Alex Nguyen</div>\n            </Grid>\n            <Grid item xs={6}>\n              <IconButton onClick={() => { window.open(\"https://www.linkedin.com/in/ahnguyen03/\") }}>\n                <LinkedInIcon style={{ fontSize: 70, color: '#e3e3e3' }} />\n              </IconButton>\n              <IconButton onClick={() => { window.open(\"https://github.com/ahnguyen03\") }}>\n                <GitHubIcon style={{ fontSize: 70, color: '#e3e3e3' }} />\n              </IconButton>\n            </Grid>\n          </Grid>\n        </ParallaxLayer>\n\n        <ParallaxLayer\n          offset={1}\n          speed={0.1}\n          onClick={() => this.parallax.scrollTo(2)}\n          style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n          <div>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <h1 className=\"AlexTitle\" style={{ textAlign: \"center\" }}>About me</h1>\n              </Grid>\n              <Grid item xs={6}>\n                <p className=\"SectionText\" style={{ textAlign: \"center\" }}>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam nec nulla maximus lacus elementum interdum vitae non erat.\n                  Integer porta libero tempor, lacinia sapien id, viverra magna. Class aptent taciti sociosqu ad litora torquent per conubia nostra,\n                  per inceptos himenaeos. Donec non justo ultricies, tempus est et, lobortis orci. Phasellus vel libero a augue finibus feugiat at at ex.\n                  Vestibulum sed lacus sed massa faucibus pulvinar eu eget sapien. In congue metus non nulla bibendum elementum. Curabitur ac laoreet nunc.\n                  Curabitur in lectus fermentum, maximus magna eget, dapibus massa.\n          </p>\n              </Grid>\n              <Grid item xs={6}>\n                \n                <p  className=\"SectionText\" style={{ textAlign: \"center\" }}>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Etiam nec nulla maximus lacus elementum interdum vitae non erat.\n                  Integer porta libero tempor, lacinia sapien id, viverra magna. Class aptent taciti sociosqu ad litora torquent per conubia nostra,\n                  per inceptos himenaeos. Donec non justo ultricies, tempus est et, lobortis orci. Phasellus vel libero a augue finibus feugiat at at ex.\n                  Vestibulum sed lacus sed massa faucibus pulvinar eu eget sapien. In congue metus non nulla bibendum elementum. Curabitur ac laoreet nunc.\n                  Curabitur in lectus fermentum, maximus magna eget, dapibus massa.\n          </p>\n              </Grid>\n            </Grid>\n          </div>\n        </ParallaxLayer>\n\n        <ParallaxLayer\n          offset={2}\n          speed={-0.3}\n          style={{\n            display: 'flex', alignItems: 'center', justifyContent: 'center'\n          }}\n        >\n          <h1 className=\"AlexTitle\" >Get In Touch</h1>\n        </ParallaxLayer>\n\n        <ParallaxLayer offset={2.5} speed={-0.4} style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', pointerEvents: 'none' }}>\n          <img src={require('./images/earth.png')} style={{ width: '60%' }} />\n        </ParallaxLayer>\n\n        <ParallaxLayer\n          offset={2}\n          speed={-0}\n          style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n          onClick={() => this.parallax.scrollTo(0)}\n        >\n        </ParallaxLayer>\n      </Parallax>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}